// Code generated by protoc-gen-go. DO NOT EDIT.
// source: thegame.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	thegame.proto

It has these top-level messages:
	Controls
	GameState
	Entity
	Debris
	Bullet
	Hero
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Ability int32

const (
	Ability_health_regen       Ability = 0
	Ability_max_health         Ability = 1
	Ability_body_damage        Ability = 2
	Ability_bullet_speed       Ability = 3
	Ability_bullet_penetration Ability = 4
	Ability_bullet_damage      Ability = 5
	Ability_bullet_reload      Ability = 6
	Ability_movement_speed     Ability = 7
)

var Ability_name = map[int32]string{
	0: "health_regen",
	1: "max_health",
	2: "body_damage",
	3: "bullet_speed",
	4: "bullet_penetration",
	5: "bullet_damage",
	6: "bullet_reload",
	7: "movement_speed",
}
var Ability_value = map[string]int32{
	"health_regen":       0,
	"max_health":         1,
	"body_damage":        2,
	"bullet_speed":       3,
	"bullet_penetration": 4,
	"bullet_damage":      5,
	"bullet_reload":      6,
	"movement_speed":     7,
}

func (x Ability) String() string {
	return proto.EnumName(Ability_name, int32(x))
}
func (Ability) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Controls struct {
	Accelerate            bool      `protobuf:"varint,1,opt,name=accelerate" json:"accelerate,omitempty"`
	AccelerationDirection float64   `protobuf:"fixed64,2,opt,name=acceleration_direction,json=accelerationDirection" json:"acceleration_direction,omitempty"`
	Shoot                 bool      `protobuf:"varint,3,opt,name=shoot" json:"shoot,omitempty"`
	ShootDirection        float64   `protobuf:"fixed64,4,opt,name=shoot_direction,json=shootDirection" json:"shoot_direction,omitempty"`
	LevelUp               []Ability `protobuf:"varint,5,rep,packed,name=level_up,json=levelUp,enum=Ability" json:"level_up,omitempty"`
}

func (m *Controls) Reset()                    { *m = Controls{} }
func (m *Controls) String() string            { return proto.CompactTextString(m) }
func (*Controls) ProtoMessage()               {}
func (*Controls) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Controls) GetAccelerate() bool {
	if m != nil {
		return m.Accelerate
	}
	return false
}

func (m *Controls) GetAccelerationDirection() float64 {
	if m != nil {
		return m.AccelerationDirection
	}
	return 0
}

func (m *Controls) GetShoot() bool {
	if m != nil {
		return m.Shoot
	}
	return false
}

func (m *Controls) GetShootDirection() float64 {
	if m != nil {
		return m.ShootDirection
	}
	return 0
}

func (m *Controls) GetLevelUp() []Ability {
	if m != nil {
		return m.LevelUp
	}
	return nil
}

type GameState struct {
	Debris  []*Debris `protobuf:"bytes,1,rep,name=debris" json:"debris,omitempty"`
	Bullets []*Bullet `protobuf:"bytes,2,rep,name=bullets" json:"bullets,omitempty"`
	Heroes  []*Hero   `protobuf:"bytes,3,rep,name=heroes" json:"heroes,omitempty"`
}

func (m *GameState) Reset()                    { *m = GameState{} }
func (m *GameState) String() string            { return proto.CompactTextString(m) }
func (*GameState) ProtoMessage()               {}
func (*GameState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GameState) GetDebris() []*Debris {
	if m != nil {
		return m.Debris
	}
	return nil
}

func (m *GameState) GetBullets() []*Bullet {
	if m != nil {
		return m.Bullets
	}
	return nil
}

func (m *GameState) GetHeroes() []*Hero {
	if m != nil {
		return m.Heroes
	}
	return nil
}

type Entity struct {
	Id                  int32          `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Position            *Entity_Vector `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	Radius              float64        `protobuf:"fixed64,3,opt,name=radius" json:"radius,omitempty"`
	Velocity            *Entity_Vector `protobuf:"bytes,4,opt,name=velocity" json:"velocity,omitempty"`
	Health              int32          `protobuf:"varint,5,opt,name=health" json:"health,omitempty"`
	BodyDamage          int32          `protobuf:"varint,6,opt,name=body_damage,json=bodyDamage" json:"body_damage,omitempty"`
	RewardingExperience int32          `protobuf:"varint,7,opt,name=rewarding_experience,json=rewardingExperience" json:"rewarding_experience,omitempty"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Entity) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Entity) GetPosition() *Entity_Vector {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Entity) GetRadius() float64 {
	if m != nil {
		return m.Radius
	}
	return 0
}

func (m *Entity) GetVelocity() *Entity_Vector {
	if m != nil {
		return m.Velocity
	}
	return nil
}

func (m *Entity) GetHealth() int32 {
	if m != nil {
		return m.Health
	}
	return 0
}

func (m *Entity) GetBodyDamage() int32 {
	if m != nil {
		return m.BodyDamage
	}
	return 0
}

func (m *Entity) GetRewardingExperience() int32 {
	if m != nil {
		return m.RewardingExperience
	}
	return 0
}

type Entity_Vector struct {
	X float64 `protobuf:"fixed64,1,opt,name=x" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y" json:"y,omitempty"`
}

func (m *Entity_Vector) Reset()                    { *m = Entity_Vector{} }
func (m *Entity_Vector) String() string            { return proto.CompactTextString(m) }
func (*Entity_Vector) ProtoMessage()               {}
func (*Entity_Vector) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *Entity_Vector) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Entity_Vector) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type Debris struct {
	Entity *Entity `protobuf:"bytes,1,opt,name=entity" json:"entity,omitempty"`
}

func (m *Debris) Reset()                    { *m = Debris{} }
func (m *Debris) String() string            { return proto.CompactTextString(m) }
func (*Debris) ProtoMessage()               {}
func (*Debris) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Debris) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type Bullet struct {
	Entity *Entity `protobuf:"bytes,1,opt,name=entity" json:"entity,omitempty"`
	Owner  int32   `protobuf:"varint,2,opt,name=owner" json:"owner,omitempty"`
}

func (m *Bullet) Reset()                    { *m = Bullet{} }
func (m *Bullet) String() string            { return proto.CompactTextString(m) }
func (*Bullet) ProtoMessage()               {}
func (*Bullet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Bullet) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *Bullet) GetOwner() int32 {
	if m != nil {
		return m.Owner
	}
	return 0
}

type Hero struct {
	Entity        *Entity `protobuf:"bytes,1,opt,name=entity" json:"entity,omitempty"`
	AbilityLevels []int32 `protobuf:"varint,2,rep,packed,name=ability_levels,json=abilityLevels" json:"ability_levels,omitempty"`
	AbilityValues []int32 `protobuf:"varint,3,rep,packed,name=ability_values,json=abilityValues" json:"ability_values,omitempty"`
	SkillPoints   int32   `protobuf:"varint,4,opt,name=skill_points,json=skillPoints" json:"skill_points,omitempty"`
}

func (m *Hero) Reset()                    { *m = Hero{} }
func (m *Hero) String() string            { return proto.CompactTextString(m) }
func (*Hero) ProtoMessage()               {}
func (*Hero) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Hero) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *Hero) GetAbilityLevels() []int32 {
	if m != nil {
		return m.AbilityLevels
	}
	return nil
}

func (m *Hero) GetAbilityValues() []int32 {
	if m != nil {
		return m.AbilityValues
	}
	return nil
}

func (m *Hero) GetSkillPoints() int32 {
	if m != nil {
		return m.SkillPoints
	}
	return 0
}

func init() {
	proto.RegisterType((*Controls)(nil), "Controls")
	proto.RegisterType((*GameState)(nil), "GameState")
	proto.RegisterType((*Entity)(nil), "Entity")
	proto.RegisterType((*Entity_Vector)(nil), "Entity.Vector")
	proto.RegisterType((*Debris)(nil), "Debris")
	proto.RegisterType((*Bullet)(nil), "Bullet")
	proto.RegisterType((*Hero)(nil), "Hero")
	proto.RegisterEnum("Ability", Ability_name, Ability_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TheGame service

type TheGameClient interface {
	Game(ctx context.Context, opts ...grpc.CallOption) (TheGame_GameClient, error)
}

type theGameClient struct {
	cc *grpc.ClientConn
}

func NewTheGameClient(cc *grpc.ClientConn) TheGameClient {
	return &theGameClient{cc}
}

func (c *theGameClient) Game(ctx context.Context, opts ...grpc.CallOption) (TheGame_GameClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_TheGame_serviceDesc.Streams[0], c.cc, "/TheGame/Game", opts...)
	if err != nil {
		return nil, err
	}
	x := &theGameGameClient{stream}
	return x, nil
}

type TheGame_GameClient interface {
	Send(*Controls) error
	Recv() (*GameState, error)
	grpc.ClientStream
}

type theGameGameClient struct {
	grpc.ClientStream
}

func (x *theGameGameClient) Send(m *Controls) error {
	return x.ClientStream.SendMsg(m)
}

func (x *theGameGameClient) Recv() (*GameState, error) {
	m := new(GameState)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for TheGame service

type TheGameServer interface {
	Game(TheGame_GameServer) error
}

func RegisterTheGameServer(s *grpc.Server, srv TheGameServer) {
	s.RegisterService(&_TheGame_serviceDesc, srv)
}

func _TheGame_Game_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TheGameServer).Game(&theGameGameServer{stream})
}

type TheGame_GameServer interface {
	Send(*GameState) error
	Recv() (*Controls, error)
	grpc.ServerStream
}

type theGameGameServer struct {
	grpc.ServerStream
}

func (x *theGameGameServer) Send(m *GameState) error {
	return x.ServerStream.SendMsg(m)
}

func (x *theGameGameServer) Recv() (*Controls, error) {
	m := new(Controls)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _TheGame_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TheGame",
	HandlerType: (*TheGameServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Game",
			Handler:       _TheGame_Game_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "thegame.proto",
}

func init() { proto.RegisterFile("thegame.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 607 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0x41, 0x6f, 0xd3, 0x4a,
	0x10, 0xc7, 0xbb, 0x4e, 0x6c, 0xa7, 0x93, 0xd6, 0xf5, 0xdb, 0xd7, 0x57, 0x59, 0x95, 0x1e, 0x4d,
	0x5d, 0x10, 0xa1, 0x07, 0x0b, 0x82, 0x38, 0x23, 0x4a, 0x2b, 0x38, 0x70, 0x40, 0x0b, 0xf4, 0xc0,
	0xc5, 0x72, 0xe2, 0x51, 0xb2, 0xc2, 0xf1, 0x5a, 0xeb, 0x4d, 0x9a, 0x7c, 0x13, 0xc4, 0x89, 0x2f,
	0xc3, 0xf7, 0x42, 0x1e, 0x6f, 0xd2, 0x20, 0x21, 0xf5, 0x64, 0xcf, 0xef, 0xff, 0xdf, 0xf1, 0x7a,
	0x66, 0x76, 0xe1, 0xd0, 0xcc, 0x70, 0x9a, 0xcd, 0x31, 0xa9, 0xb4, 0x32, 0x2a, 0xfe, 0xc5, 0xa0,
	0xf7, 0x56, 0x95, 0x46, 0xab, 0xa2, 0xe6, 0x8f, 0x00, 0xb2, 0xc9, 0x04, 0x0b, 0xd4, 0x99, 0xc1,
	0x88, 0x0d, 0xd8, 0xb0, 0x27, 0x76, 0x08, 0x7f, 0x05, 0x27, 0xdb, 0x48, 0xaa, 0x32, 0xcd, 0xa5,
	0xc6, 0x49, 0xf3, 0x16, 0x39, 0x03, 0x36, 0x64, 0xe2, 0xbf, 0x5d, 0xf5, 0x7a, 0x23, 0xf2, 0x63,
	0x70, 0xeb, 0x99, 0x52, 0x26, 0xea, 0x50, 0xc6, 0x36, 0xe0, 0x4f, 0xe1, 0x88, 0x5e, 0x76, 0xb2,
	0x74, 0x29, 0x4b, 0x40, 0xf8, 0x7e, 0xf9, 0x05, 0xf4, 0x0a, 0x5c, 0x62, 0x91, 0x2e, 0xaa, 0xc8,
	0x1d, 0x74, 0x86, 0xc1, 0xa8, 0x97, 0xbc, 0x19, 0xcb, 0x42, 0x9a, 0xb5, 0xf0, 0x49, 0xf9, 0x52,
	0xc5, 0x25, 0xec, 0xbf, 0xcb, 0xe6, 0xf8, 0xc9, 0x34, 0xfb, 0x3c, 0x03, 0x2f, 0xc7, 0xb1, 0x96,
	0x75, 0xc4, 0x06, 0x9d, 0x61, 0x7f, 0xe4, 0x27, 0xd7, 0x14, 0x0a, 0x8b, 0xf9, 0x39, 0xf8, 0xe3,
	0x45, 0x51, 0xa0, 0xa9, 0x23, 0xc7, 0x3a, 0xae, 0x28, 0x16, 0x1b, 0xce, 0xff, 0x07, 0x6f, 0x86,
	0x5a, 0x61, 0x1d, 0x75, 0xc8, 0xe1, 0x26, 0xef, 0x51, 0x2b, 0x61, 0x61, 0xfc, 0xc3, 0x01, 0xef,
	0xa6, 0x34, 0xd2, 0xac, 0x79, 0x00, 0x8e, 0xcc, 0xa9, 0x5a, 0xae, 0x70, 0x64, 0xce, 0x2f, 0xa1,
	0x57, 0xa9, 0x5a, 0x6e, 0xeb, 0xd2, 0x1f, 0x05, 0x49, 0x6b, 0x4d, 0x6e, 0x71, 0x62, 0x94, 0x16,
	0x5b, 0x9d, 0x9f, 0x80, 0xa7, 0xb3, 0x5c, 0x2e, 0x6a, 0xaa, 0x0d, 0x13, 0x36, 0x6a, 0x72, 0x2c,
	0xb1, 0x50, 0x13, 0x69, 0xd6, 0x54, 0x95, 0xbf, 0xe4, 0xd8, 0xe8, 0x4d, 0x8e, 0x19, 0x66, 0x85,
	0x99, 0x45, 0x2e, 0xed, 0xc1, 0x46, 0xfc, 0x0c, 0xfa, 0x63, 0x95, 0xaf, 0xd3, 0x3c, 0x9b, 0x67,
	0x53, 0x8c, 0x3c, 0x12, 0xa1, 0x41, 0xd7, 0x44, 0xf8, 0x0b, 0x38, 0xd6, 0x78, 0x97, 0xe9, 0x5c,
	0x96, 0xd3, 0x14, 0x57, 0x15, 0x6a, 0x89, 0xe5, 0x04, 0x23, 0x9f, 0x9c, 0xff, 0x6e, 0xb5, 0x9b,
	0xad, 0x74, 0xfa, 0x18, 0xbc, 0xf6, 0xfb, 0xfc, 0x00, 0xd8, 0x8a, 0x7e, 0x9a, 0x09, 0xb6, 0x6a,
	0xa2, 0xb5, 0x1d, 0x02, 0xb6, 0x8e, 0x9f, 0x81, 0xd7, 0x16, 0xbc, 0xe9, 0x04, 0xd2, 0xb6, 0xc9,
	0xda, 0xd4, 0xb9, 0xfd, 0x0b, 0x61, 0x71, 0xfc, 0x1a, 0xbc, 0xb6, 0xf2, 0x0f, 0x5a, 0x9b, 0x31,
	0x52, 0x77, 0x25, 0x6a, 0xfa, 0x8e, 0x2b, 0xda, 0x20, 0xfe, 0xce, 0xa0, 0xdb, 0x74, 0xe6, 0xe1,
	0xf5, 0x4f, 0x20, 0xc8, 0xda, 0xb1, 0x49, 0x69, 0x6a, 0xda, 0xde, 0xbb, 0xe2, 0xd0, 0xd2, 0x0f,
	0x04, 0x77, 0x6d, 0xcb, 0xac, 0x58, 0xd8, 0x01, 0xb8, 0xb7, 0xdd, 0x12, 0xe4, 0xe7, 0x70, 0x50,
	0x7f, 0x93, 0x45, 0x91, 0x56, 0x4a, 0x96, 0xa6, 0xa6, 0x2e, 0xb9, 0xa2, 0x4f, 0xec, 0x23, 0xa1,
	0xcb, 0x9f, 0x0c, 0x7c, 0x3b, 0xa8, 0x3c, 0x84, 0x83, 0xb6, 0x2d, 0xa9, 0xc6, 0x29, 0x96, 0xe1,
	0x1e, 0x0f, 0x00, 0xe6, 0xd9, 0x2a, 0x6d, 0x69, 0xc8, 0xf8, 0xd1, 0x1f, 0xed, 0x0a, 0x9d, 0x66,
	0x49, 0x3b, 0x8c, 0x69, 0x5d, 0x21, 0xe6, 0x61, 0x87, 0x9f, 0x00, 0xb7, 0xa4, 0xc2, 0x12, 0x4d,
	0x7b, 0xce, 0xc2, 0x2e, 0xff, 0x07, 0x0e, 0x2d, 0xb7, 0x8b, 0xdd, 0x1d, 0xa4, 0xb1, 0x50, 0x59,
	0x1e, 0x7a, 0x9c, 0x43, 0x30, 0x57, 0x4b, 0x9c, 0x63, 0xb9, 0xc9, 0xe8, 0x8f, 0x12, 0xf0, 0x3f,
	0xcf, 0xb0, 0x39, 0x39, 0xfc, 0x02, 0xba, 0xf4, 0xdc, 0x4f, 0x36, 0xf7, 0xc1, 0x29, 0x24, 0xdb,
	0x33, 0x15, 0xef, 0x0d, 0xd9, 0x73, 0x76, 0xd5, 0xfd, 0xea, 0x54, 0xe3, 0xb1, 0x47, 0x77, 0xc7,
	0xcb, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x62, 0x30, 0x57, 0xa5, 0x4c, 0x04, 0x00, 0x00,
}
